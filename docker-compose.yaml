
services:
  db:
    image: postgres:15
    restart: always
    container_name: NIC_astrawoood_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST=db
    env_file:
      - .env


    networks:
      - nic_astrawood_network



  nic_astrawood:
    build:
      context:
        .
      dockerfile:  Dockerfile
    restart: always
    container_name: nic_astrawood
    expose:
      - 8000
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - POSTGRES_HOST=db
    env_file:
      - .env
    volumes:
      - static_volume:/staticfiles
      - media_volume:/media
    networks:
      - nic_astrawood_network


  nginx:
    image: nginx:latest
    restart: always
    container_name: nic_astrawood-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d/
      - ./staticfiles:/static
      - ./media:/media
      - /home/portal/avh_portal/ssl:/etc/nginx/ssl
      - /root/projects/NIC_astrawood/backend_api/static:/root/projects/NIC_astrawood/backend_api/static
      - /root/projects/NIC_astrawood/backend_api/media:/root/projects/NIC_astrawood/backend_api/media

    depends_on:
      - nic_astrawood
    networks:
      - nic_astrawood_network
   




networks:
  nic_astrawood_network:
    driver: bridge


volumes:
  postgres_data:
  static_volume:
  media_volume:
